<div id="appVue">
    <section class="section-hero overlay inner-page bg-image " style="background-image: url('/images/hero_1.jpg');"
             id="home-section">
        <div class="container">
            <div class="row">
                <div class="col-md-7">
                    <h1 class="text-white font-weight-bold">文章</h1>
                </div>
            </div>
        </div>
    </section>
    <!-- home end -->
    <!-- <div class="navbar navbar-expand-lg navbar-dark bg-info"> -->
    <section class="site-section block__18514 pt-4" id="next-section">
        <div class="container h-100">
            <div class="row justify-content-center">
                <div class="col-lg-8 content mt-3 pt-lg-0 mt-lg-5 pb-2">
                    <div class="context w-100 pt-2">
                        <div class="item row pt-4">
                            <div class="col-7">
                                <h3 class="font-weight-bolder col-10">{{datas.articleName}}</h3>
                            </div>
                            <div class="col-5 d-lg-flex row justify-content-end ml-md-0 pr-4">
                                <div class="col-3"></div>
                                <div class="col-9 align-content-end">
                                    @*<script class="t1" type="text/javascript" text-align:right>
                                    var myDate = new Date();
                                    document.write(myDate.toLocaleString())
                                    </script>*@
                                    {{datas.updateTime}}
                                </div>
                                <div class="col-6 text-end mr-md-3">
                                    <a href="#" class="btn btn-primary"><i class="fa-solid fa-pen"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="item row px-5">
                            <div class="col-12">
                                <p>{{datas.contents}}</p>
                                <div class="heart"></div>
                            </div>
                        </div>
                        <hr>
                        <div id="replyVue">
                            <div class="col-12" v-for="data in ReplyDTOs">
                                <span>
                                    <p>
                                        @*此公司的特色就是:年年虧損, 離職率高, 什麼都想做甚麼都不奇怪*@
                                        {{data.replyMessage}}
                                    </p>
                                    <p>{{data.replyTime}}</p>
                                </span>
                                <div>{{data.floor}}樓</div>
                                <hr>
                            </div>
                            <hr>
                            <div class="input-group col-12 my-4">
                                <textarea type="text" name="userid" class="form-control mx-2" placeholder="留下你的想法..." v-model="ReplyMessage"></textarea>
                                <button type="submit" class="btn btn-primary b2" @@click="insert(datas)">發送</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>


@section Scripts{

    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.2/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>

    <script>
        const webApi = "https://localhost:7240"
        const appVue = new Vue({
            el: "#appVue", // 綁定位置
            name: "appVue",
            data: {
                datas: {},
                articleName: "",
                //contents: "",
                updateTime: "",
                ReplyDTOs: [],
                ReplyMessage: null,
                Floor: "",
                replyTime: "",
            },
            mounted: function () {
                var _this = this;
                _this.course();
                _this.getreply();
            },
            methods: {
                course: function () {
                    let _this = this;
                    //let getUrlString = location.href;
                    //let url = new URL(getUrlString);
                    let ArticleId = new URL(location.href).searchParams.get('id');
                    axios.get(`${webApi}/api/Platforms/${ArticleId}`)
                        .then(response => {
                            _this.datas = response.data[0];
                            _this.datas.updateTime = moment(_this.datas.updateTime).add(8, "hour").format('YYYY/MM/DD h:mm a');
                        })
                        .catch(err => console.log(err))
                        .finally(console.log('完成'))
                },
                getreply: function () {
                    let _this = this;
                    let ArticleId = new URL(location.href).searchParams.get('id');
                    axios.get(`${webApi}/api/Reply/${ArticleId}`)
                        .then(response => {
                            _this.ReplyDTOs = response.data;
                            var ReplyList = [];
                            for (var i = 0; i < _this.ReplyDTOs.length; i++) {
                                let item = {};
                                item = _this.ReplyDTOs[i];
                                item.replyTime = moment(item.replyTime).add(8, "hour").format('YYYY/MM/DD h:mm a')
                                ReplyList.push(item);
                                _this.Floor = (item.floor)
                            }
                            _this.ReplyDTOs = ReplyList;
                        })

                        .catch(err => console.log(err))
                        .finally(console.log('完成'))
                },
                insert: function (datas) {
                    let _this = this;
                    var request = {};
                    request.ReplyMessage = _this.ReplyMessage;
                    request.ArticleId = datas.articleId;
                    request.Floor = _this.Floor+1;
                    request.ArticleName = datas.articleName;
                    console.log(request)
                    axios.post(`${webApi}/api/Reply`, request)
                        .then(response => {
                            _this.course();
                            _this.getreply();
                            _this.ReplyMessage = null;
                        });
                        
                },
            }
        })
    </script>


    @*<script>
        const localhost = "https://localhost:7240"
        const replyVue = new Vue({
            el: "#replyVue", // 綁定位置
            name: "replyVue",
            data: {
                ReplyDTOs: [],
                //ReplyMessage: null,
                //Floor: "",
                //ReplyTime: "",
            },
            mounted: function () {
                var _this = this;
                _this.getreply();
            },
            methods: {
                getreply: function () {
                    let _this = this;
                    let ArticleId = new URL(location.href).searchParams.get('id');
                    axios.get(`${webApi}/api/Reply/${ArticleId}`)
                        .then(response => {
                            _this.ReplyDTOs = response.data;
                            var ReplyList = [];
                            for (var i = 0; i < _this.ReplyDTOs.length; i++) {
                                let item = {};
                                item = _this.ReplyDTOs[i];
                                item.ReplyTime = moment(item.ReplyTime).add(8, "hour").format('YYYY/MM/DD h:mm a')
                                ReplyList.push(item);
                            }
                            _this.ReplyDTOs = ReplyList;
                        })
                        .catch(err => console.log(err))
                        .finally(console.log('完成'))
                },
                //reply: function () {
                //    let _this = this;
                //    var request = {};
                //    request.ReplyMessage = _this.ReplyMessage;
                //    if (_this.datas.Floor == undefined) {
                //        request.Floor = 0;
                //    } else {
                //        request.Floor = _this.datas.Floor;
                //    }
                //    console.log(_this.datas)
                //    //axios.post(`${webApi}/api/Reply`, request).then(response => {
                //    //    window.location = "/Home/platformArticle";
                //    //});
                //},
            }
        })
    </script>*@
    }